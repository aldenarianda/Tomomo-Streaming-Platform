@model Tomomo7.ViewModels.DashboardViewModel

@{
    ViewData["Title"] = "Admin Dashboard";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h1 class="mb-4">Dashboard</h1>

<div class="row">
    <div class="col-lg-3 col-6 mb-4">
        <div class="card kpi-card bg-gradient-revenue h-100 shadow-sm">
            <div class="card-body">
                <div class="text-uppercase small">Total Revenue</div>
                <div class="h3 fw-bold">@Model.TotalRevenue.ToString("C", new System.Globalization.CultureInfo("id-ID"))</div>
                <div class="kpi-icon"><i class="fa-solid fa-dollar-sign"></i></div>
            </div>
        </div>
    </div>
    <div class="col-lg-3 col-6 mb-4">
        <div class="card kpi-card bg-gradient-subscriptions h-100 shadow-sm">
            <div class="card-body">
                <div class="text-uppercase small">Active Subs</div>
                <div class="h3 fw-bold">@Model.TotalActiveSubscriptions</div>
                <div class="kpi-icon"><i class="fa-solid fa-star"></i></div>
            </div>
        </div>
    </div>
    <div class="col-lg-3 col-6 mb-4">
        <div class="card kpi-card bg-gradient-movies h-100 shadow-sm">
            <div class="card-body">
                <div class="text-uppercase small">Total Movies</div>
                <div class="h3 fw-bold">@Model.TotalMovies</div>
                <div class="kpi-icon"><i class="fa-solid fa-film"></i></div>
            </div>
        </div>
    </div>
    <div class="col-lg-3 col-6 mb-4">
        <div class="card kpi-card bg-gradient-users h-100 shadow-sm">
            <div class="card-body">
                <div class="text-uppercase small">Total Users</div>
                <div class="h3 fw-bold">@Model.TotalUsers</div>
                <div class="kpi-icon"><i class="fa-solid fa-users"></i></div>
            </div>
        </div>
    </div>
</div>

<div class="row">

    <div class="col-lg-7 mb-4">
        <div class="card shadow h-100">
            <div class="card-header py-3">
                <h6 class="m-0 fw-bold">Movies per Genre</h6>
            </div>
            <div class="card-body">
                <canvas id="moviesPerGenreChart"></canvas>
            </div>
        </div>
    </div>

    <div class="col-lg-5 mb-4">
        <div class="card shadow h-100">
            <div class="card-header py-3">
                <h6 class="m-0 fw-bold">Top 5 Most Favorited Movies</h6>
            </div>
            <div class="card-body">
                <ul class="list-group list-group-flush">
                    @foreach (var movie in Model.MostFavoritedMovies)
                    {
                        <a asp-controller="Movie" asp-action="Details" asp-route-id="@movie.MovieId" class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
                            <div>
                                <i class="fa-solid fa-trophy text-warning me-2"></i>
                                @movie.Title
                            </div>
                            <span class="badge bg-primary rounded-pill">@movie.UserFavorites.Count()</span>
                        </a>
                    }
                </ul>
            </div>
            <div class="card-footer">
                <h6 class="m-0 fw-bold">Recent Users</h6>
                <ul class="list-group list-group-flush mt-2">
                    @foreach (var user in Model.RecentUsers)
                    {
                        <li class="list-group-item">
                            <i class="fa-solid fa-user-plus text-success me-2"></i>
                            @user.Username
                            <span class="text-muted small float-end">Joined @user.CreatedAt.ToString("dd MMM")</span>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </div>

</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Data untuk chart
            const genreLabels = @Html.Raw(Json.Serialize(Model.MoviesPerGenre.Keys));
            const movieCounts = @Html.Raw(Json.Serialize(Model.MoviesPerGenre.Values));

            Chart.defaults.color = 'rgba(233, 236, 239, 0.8)';
            Chart.defaults.borderColor = 'rgba(255, 255, 255, 0.1)';

            const ctx = document.getElementById('moviesPerGenreChart').getContext('2d');
            const moviesPerGenreChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: genreLabels,
                    datasets: [{
                        label: 'Number of Movies',
                        data: movieCounts,
                        // Palet warna yang lebih beragam untuk setiap bar
                        backgroundColor: [
                            'rgba(160, 71, 71, 0.7)',
                            'rgba(78, 115, 223, 0.7)',
                            'rgba(28, 200, 138, 0.7)',
                            'rgba(246, 194, 62, 0.7)',
                            'rgba(231, 74, 59, 0.7)',
                            'rgba(133, 135, 150, 0.7)'
                        ],
                        borderColor: [
                            '#A04747', '#4e73df', '#1cc88a', '#f6c23e', '#e74a3b', '#858796'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    indexAxis: 'y', // Membuat bar chart menjadi horizontal
                    scales: {
                        x: {
                            beginAtZero: true,
                            ticks: { precision: 0 }
                        }
                    },
                    plugins: { legend: { display: false } }
                }
            });
        });
    </script>
}
